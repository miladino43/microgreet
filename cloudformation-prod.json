{
  "AWSTemplateFormatVersion":"2010-09-09",
  "Parameters":{
    "VpcId":{
      "Type":"AWS::EC2::VPC::Id",
      "Description":"Select a VPC that allows instances to access the Internet."
    },
    "SubnetId":{
      "Type":"List<AWS::EC2::Subnet::Id>",
      "Description":"Select at two subnets in your selected VPC."
    },
    "ExecutionRoleArn":{
      "Type" : "String",
      "Description": "The Amazon Resource Name (ARN) of the task execution role that containers in this task can assume" 
    },
    "DefaultContainerCpu": {
      "Type": "Number",
      "Description": "Amount of CPU for the container - options available: https://docs.aws.amazon.com/AmazonECS/latest/userguide/fargate-task-defs.html",
      "Default": 256,
      "MinValue": 256,
      "MaxValue": 4096,
      "ConstraintDescription": "Value must be between 256 and 4096 - see: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size"
    },
    "DefaultContainerMemory": {
      "Type": "Number",
      "Description": "Amount of memory for the container - options available: https://docs.aws.amazon.com/AmazonECS/latest/userguide/fargate-task-defs.html",
      "Default": 512,
      "MinValue": 512,
      "MaxValue": 30720,
      "ConstraintDescription": "Value must be between 512 and 30720 - see: https://aws.amazon.com/fargate/pricing/"
    },
    "DefaultServiceCpuScaleOutThreshold": {
      "Type": "Number",
      "Description": "Average CPU value to trigger auto scaling out",
      "Default": 50,
      "MinValue": 0,
      "MaxValue": 100,
      "ConstraintDescription": "Value must be between 0 and 100"
    }
  },
  "Resources":{
    "ECSCluster":{
      "Type":"AWS::ECS::Cluster",
      "Properties" : {
        "ClusterName" : {
          "Ref": "AWS::"
        }
      }
    },
    "DefaultServiceScaleOutAlarm": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
          "EvaluationPeriods": 2,
          "Statistic": "Average",
          "TreatMissingData": "notBreaching",
          "Threshold": {
              "Ref": "DefaultServiceCpuScaleOutThreshold"
          },
          "AlarmDescription": "Alarm to add capacity if CPU is high",
          "Period": 60,
          "AlarmActions": [
              {
                  "Ref": "ServiceScalingPolicy"
              }
          ],
          "Namespace": "AWS/ECS",
          "Dimensions": [
              {
                  "Name": "ClusterName",
                  "Value": {
                      "Ref": "ECSCluster"
                  }
              },
              {
                  "Name": "ServiceName",
                  "Value": {
                      "Fn::GetAtt": [
                          "service",
                          "Name"
                      ]
                  }
              }
          ],
          "ComparisonOperator": "GreaterThanThreshold",
          "MetricName": "CPUUtilization"
      },
      "DependsOn": [
          "service",
          "ServiceScalingPolicy"
      ]
    },
    "AutoscalingRole":{
      "Type":"AWS::IAM::Role",
      "Properties":{
        "AssumeRolePolicyDocument":{
          "Statement":[
            {
              "Effect":"Allow",
              "Principal":{
                "Service":[
                  "application-autoscaling.amazonaws.com"
                ]
              },
              "Action":[
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path":"/",
        "Policies":[
          {
            "PolicyName":"service-autoscaling",
            "PolicyDocument":{
              "Statement":[
                {
                  "Effect":"Allow",
                  "Action":[
                    "application-autoscaling:*",
                    "cloudwatch:DescribeAlarms",
                    "cloudwatch:PutMetricAlarm",
                    "ecs:DescribeServices",
                    "ecs:UpdateService"
                  ],
                  "Resource":"*"
                }
              ]
            }
          }
        ]
      }
    },
    "ServiceScalingTarget":{
      "Type":"AWS::ApplicationAutoScaling::ScalableTarget",
      "DependsOn":"service",
      "Properties":{
        "MaxCapacity":2,
        "MinCapacity":1,
        "ResourceId":{
          "Fn::Join":[
            "",
            [
              "service/",
              {
                "Ref":"ECSCluster"
              },
              "/",
              {
                "Fn::GetAtt":[
                  "service",
                  "Name"
                ]
              }
            ]
          ]
        },
        "RoleARN":{
          "Fn::GetAtt":[
            "AutoscalingRole",
            "Arn"
          ]
        },
        "ScalableDimension":"ecs:service:DesiredCount",
        "ServiceNamespace":"ecs"
      }
    },
    "ServiceScalingPolicy":{
      "Type":"AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties":{
        "PolicyName":"AStepPolicy",
        "PolicyType":"StepScaling",
        "ScalingTargetId":{
          "Ref":"ServiceScalingTarget"
        },
        "StepScalingPolicyConfiguration":{
          "AdjustmentType":"PercentChangeInCapacity",
          "Cooldown":60,
          "MetricAggregationType":"Average",
          "StepAdjustments":[
            {
              "MetricIntervalLowerBound":0,
              "ScalingAdjustment":1
            }
          ]
        }
      }
    },
    "EcsSecurityGroup":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"ECS Security Group",
        "VpcId":{
          "Ref":"VpcId"
        }
      }
    },
    "EcsSecurityGroupHTTPinbound":{
      "Type":"AWS::EC2::SecurityGroupIngress",
      "Properties":{
        "GroupId":{
          "Ref":"EcsSecurityGroup"
        },
        "IpProtocol":"tcp",
        "FromPort":"80",
        "ToPort":"80",
        "CidrIp":"0.0.0.0/0"
      }
    },
    "CloudwatchLogsGroup":{
      "Type":"AWS::Logs::LogGroup",
      "Properties":{
        "LogGroupName":{
          "Fn::Join":[
            "-",
            [
              "ECSLogGroup",
              {
                "Ref":"AWS::StackName"
              }
            ]
          ]
        },
        "RetentionInDays":14
      }
    },
    "taskdefinition":{
      "Type":"AWS::ECS::TaskDefinition",
      "Properties":{
        "RequiresCompatibilities": ["FARGATE"],
        "NetworkMode": "awsvpc",
        "ExecutionRoleArn": {
          "Ref":"ExecutionRoleArn"
        },
        "Cpu": {
          "Ref": "DefaultContainerCpu"
        },
        "Memory": {
          "Ref": "DefaultContainerMemory"
        },
        "Family":{
          "Fn::Join":[
            "",
            [
              {
                "Ref":"AWS::StackName"
              },
              "-ecs-demo-app"
            ]
          ]
        },
        "ContainerDefinitions":[
          {
            "Name":"hello-nginx",
            "Essential":"true",
            "Image":"miladino/hello-nginx:1.4",
            "LogConfiguration":{
              "LogDriver":"awslogs",
              "Options":{
                "awslogs-group":{
                  "Ref":"CloudwatchLogsGroup"
                },
                "awslogs-region":{
                  "Ref":"AWS::Region"
                },
                "awslogs-stream-prefix":"ecs-greeting"
              }
            },
            "HealthCheck": {
              "Retries": 5,
              "Command": [
                "CMD-SHELL",
                "curl -f localhost || exit 1"
              ],
              "Timeout": 5,
              "Interval": 30,
              "StartPeriod": 15
            },
            "PortMappings":[
              {
                "ContainerPort":80
              }
            ]
          },
          {
            "Name":"hello-django",
            "Essential":true,
            "Image":"miladino/hello-django:1.3",
            "LogConfiguration":{
              "LogDriver":"awslogs",
              "Options":{
                "awslogs-group":{
                  "Ref":"CloudwatchLogsGroup"
                },
                "awslogs-region":{
                  "Ref":"AWS::Region"
                },
                "awslogs-stream-prefix":"ecs-greeting"
              }
            },
            "HealthCheck": {
              "Retries": 5,
              "Command": [
                "CMD-SHELL",
                "curl -f localhost:8000 || exit 1"
              ],
              "Timeout": 5,
              "Interval": 30,
              "StartPeriod": 15
            }
          }
        ]
      }
    },
    "service":{
      "Type":"AWS::ECS::Service",
      "Properties":{
        "Cluster":{
          "Ref":"AWS::StackName"
        },
        "ServiceName": {
          "Ref": "AWS::StackName"
        },
        "DesiredCount":"1",
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration" : {
              "AssignPublicIp" : "ENABLED",
              "SecurityGroups" : [
                {
                  "Ref":"EcsSecurityGroup"
                }
              ],
              "Subnets": 
                {
                  "Ref":"SubnetId"
                }
          }
        },
        "TaskDefinition":{
          "Ref":"taskdefinition"
        }
      }
    }
  },
  "Outputs":{
    "ecsservice":{
      "Value":{
        "Ref":"service"
      }
    },
    "ecscluster":{
      "Value":{
        "Ref":"ECSCluster"
      }
    },
    "taskdef":{
      "Value":{
        "Ref":"taskdefinition"
      }
    }
  }
}